// Generated by constants.py. DO NOT EDIT.

// spreadbytes is the VPSHUFB input required to spread bytes in each word.
DATA spreadbytes<>+0x00(SB)/1, $(0)
DATA spreadbytes<>+0x01(SB)/1, $(128)
DATA spreadbytes<>+0x02(SB)/1, $(1)
DATA spreadbytes<>+0x03(SB)/1, $(128)
DATA spreadbytes<>+0x04(SB)/1, $(2)
DATA spreadbytes<>+0x05(SB)/1, $(128)
DATA spreadbytes<>+0x06(SB)/1, $(3)
DATA spreadbytes<>+0x07(SB)/1, $(128)
DATA spreadbytes<>+0x08(SB)/1, $(8)
DATA spreadbytes<>+0x09(SB)/1, $(128)
DATA spreadbytes<>+0x0a(SB)/1, $(9)
DATA spreadbytes<>+0x0b(SB)/1, $(128)
DATA spreadbytes<>+0x0c(SB)/1, $(10)
DATA spreadbytes<>+0x0d(SB)/1, $(128)
DATA spreadbytes<>+0x0e(SB)/1, $(11)
DATA spreadbytes<>+0x0f(SB)/1, $(128)
DATA spreadbytes<>+0x10(SB)/1, $(0)
DATA spreadbytes<>+0x11(SB)/1, $(128)
DATA spreadbytes<>+0x12(SB)/1, $(1)
DATA spreadbytes<>+0x13(SB)/1, $(128)
DATA spreadbytes<>+0x14(SB)/1, $(2)
DATA spreadbytes<>+0x15(SB)/1, $(128)
DATA spreadbytes<>+0x16(SB)/1, $(3)
DATA spreadbytes<>+0x17(SB)/1, $(128)
DATA spreadbytes<>+0x18(SB)/1, $(8)
DATA spreadbytes<>+0x19(SB)/1, $(128)
DATA spreadbytes<>+0x1a(SB)/1, $(9)
DATA spreadbytes<>+0x1b(SB)/1, $(128)
DATA spreadbytes<>+0x1c(SB)/1, $(10)
DATA spreadbytes<>+0x1d(SB)/1, $(128)
DATA spreadbytes<>+0x1e(SB)/1, $(11)
DATA spreadbytes<>+0x1f(SB)/1, $(128)
GLOBL spreadbytes<>(SB), (RODATA+NOPTR), $32

// spreadnibbleslut is a lookup table to perform 4-bit spread operations with
// VPSHUFB.
DATA spreadnibbleslut<>+0x00(SB)/1, $(0)
DATA spreadnibbleslut<>+0x01(SB)/1, $(1)
DATA spreadnibbleslut<>+0x02(SB)/1, $(4)
DATA spreadnibbleslut<>+0x03(SB)/1, $(5)
DATA spreadnibbleslut<>+0x04(SB)/1, $(16)
DATA spreadnibbleslut<>+0x05(SB)/1, $(17)
DATA spreadnibbleslut<>+0x06(SB)/1, $(20)
DATA spreadnibbleslut<>+0x07(SB)/1, $(21)
DATA spreadnibbleslut<>+0x08(SB)/1, $(64)
DATA spreadnibbleslut<>+0x09(SB)/1, $(65)
DATA spreadnibbleslut<>+0x0a(SB)/1, $(68)
DATA spreadnibbleslut<>+0x0b(SB)/1, $(69)
DATA spreadnibbleslut<>+0x0c(SB)/1, $(80)
DATA spreadnibbleslut<>+0x0d(SB)/1, $(81)
DATA spreadnibbleslut<>+0x0e(SB)/1, $(84)
DATA spreadnibbleslut<>+0x0f(SB)/1, $(85)
DATA spreadnibbleslut<>+0x10(SB)/1, $(0)
DATA spreadnibbleslut<>+0x11(SB)/1, $(1)
DATA spreadnibbleslut<>+0x12(SB)/1, $(4)
DATA spreadnibbleslut<>+0x13(SB)/1, $(5)
DATA spreadnibbleslut<>+0x14(SB)/1, $(16)
DATA spreadnibbleslut<>+0x15(SB)/1, $(17)
DATA spreadnibbleslut<>+0x16(SB)/1, $(20)
DATA spreadnibbleslut<>+0x17(SB)/1, $(21)
DATA spreadnibbleslut<>+0x18(SB)/1, $(64)
DATA spreadnibbleslut<>+0x19(SB)/1, $(65)
DATA spreadnibbleslut<>+0x1a(SB)/1, $(68)
DATA spreadnibbleslut<>+0x1b(SB)/1, $(69)
DATA spreadnibbleslut<>+0x1c(SB)/1, $(80)
DATA spreadnibbleslut<>+0x1d(SB)/1, $(81)
DATA spreadnibbleslut<>+0x1e(SB)/1, $(84)
DATA spreadnibbleslut<>+0x1f(SB)/1, $(85)
GLOBL spreadnibbleslut<>(SB), (RODATA+NOPTR), $32

// lonibblemask selects the low nibble of each byte in a 64-bit word.
DATA lonibblemask<>+0x00(SB)/1, $(15)
DATA lonibblemask<>+0x01(SB)/1, $(15)
DATA lonibblemask<>+0x02(SB)/1, $(15)
DATA lonibblemask<>+0x03(SB)/1, $(15)
DATA lonibblemask<>+0x04(SB)/1, $(15)
DATA lonibblemask<>+0x05(SB)/1, $(15)
DATA lonibblemask<>+0x06(SB)/1, $(15)
DATA lonibblemask<>+0x07(SB)/1, $(15)
GLOBL lonibblemask<>(SB), (RODATA+NOPTR), $8

// hinibblemask selects the high nibble of each byte in a 64-bit word.
DATA hinibblemask<>+0x00(SB)/1, $(240)
DATA hinibblemask<>+0x01(SB)/1, $(240)
DATA hinibblemask<>+0x02(SB)/1, $(240)
DATA hinibblemask<>+0x03(SB)/1, $(240)
DATA hinibblemask<>+0x04(SB)/1, $(240)
DATA hinibblemask<>+0x05(SB)/1, $(240)
DATA hinibblemask<>+0x06(SB)/1, $(240)
DATA hinibblemask<>+0x07(SB)/1, $(240)
GLOBL hinibblemask<>(SB), (RODATA+NOPTR), $8

// reciprocal180 is the float 1/180.0 for quantization.
DATA reciprocal180<>+0x00(SB)/8, $(0.005555555555555556)
GLOBL reciprocal180<>(SB), (RODATA+NOPTR), $8

// reciprocal360 is the float 1/360.0 for quantization.
DATA reciprocal360<>+0x00(SB)/8, $(0.002777777777777778)
GLOBL reciprocal360<>(SB), (RODATA+NOPTR), $8

// onepointfive is the float value 1.5 needed for quantization.
DATA onepointfive<>+0x00(SB)/8, $(1.500000000000000000)
GLOBL onepointfive<>(SB), (RODATA+NOPTR), $8
